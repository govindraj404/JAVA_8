spring:
  messages:
    basename: i18n.i18n
---
spring:
  web.resources.static-locations: "file:./app"
cds:
  security.mock.users:
    - name: admin
      password: admin
      roles:
        - Complaint.Create
        - Complaint.Read
        - Complaint.Update
        - Complaint.Reopen
        - Complaint.Close
        - Complaint.Discard
        - Claim.Create
        - Claim.Read
        - Claim.Update
        - Stream.Read
        - Stream.Update
        - QualityNotification.Create
        - QualityNotification.Read
        - QualityNotification.Update
        - ReturnPurchaseOrder.Create
        - ReturnPurchaseOrder.Read
        - ReturnPurchaseOrder.Update
        - SupplierIssueProcess.Create
        - SupplierIssueProcess.Read
        - SupplierIssueProcess.Update
        - CostCollector.Create
        - CostCollector.Read
        - CostCollector.Update
        - CostCollector.Delete
        - ConditionType.Admin
        - ServiceMaterial.Admin
        - DestinationConfiguration.Admin
        - BusinessObjectConfiguration.Admin
        - ClaimStatusMapping.Admin
        - HealthChecks.Read

---
spring:
  config.activate.on-profile: cloud
cds:
  messaging:
    services:
      1:
        name: "cmh-messaging"
        subscribePrefix: "+/+/+/"
        binding: "cmh-messaging"
        kind: enterprise-messaging
        queue:
          maxFailedAttempts : 2
          config:
            maxRedeliveryCount: 2
            deadMsgQueue : "DMQ"
            respectTtl : true
            maxTtl : 300
  multi-tenancy:
    health-check:
      enabled: true
      health-check-statement: SELECT 1 FROM DUMMY
      interval-millis: 600000
---
spring:
  config.activate.on-profile: sqlite
  datasource:
    url: "jdbc:sqlite:sqlite.db"
    driver-class-name: org.sqlite.JDBC
    initialization-mode: never
    hikari:
      maximum-pool-size: 1
---
spring:
  config.activate.on-profile: default
  datasource:
    url: "jdbc:sqlite:file::memory:?cache=shared"
    driver-class-name: org.sqlite.JDBC
    initialization-mode: always
    hikari:
      maximum-pool-size: 1
      max-lifetime: 0
---

spring:
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
---
# Enable health checks
management:
  endpoints:
    web:
      exposure:
        exclude: info     # disable info endpoint
        include: health
    jmx:
      exposure:
        exclude: "*"      # disable all jmx endpoints
    enabled-by-default: false
  endpoint:
    health:
      enabled: true
      show-details: always #never
      show-components: always    # components should only be visible to authorized users
      roles: HealthChecks.Read #Just a sample Role should be configured in ActuatorSecurityConfiguration
    info:
      enabled: false
---
server:
    max-http-header-size: 40KB
    