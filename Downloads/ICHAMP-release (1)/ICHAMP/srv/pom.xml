<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>cmh-parent</artifactId>
        <groupId>com.sap.ic</groupId>
        <version>${revision}</version>
    </parent>

    <artifactId>cmh-service</artifactId>
    <packaging>jar</packaging>

    <name>cmh-service</name>
	
    <dependencies>
        <dependency>
            <groupId>com.sap.cds</groupId>
            <artifactId>cds-starter-spring-boot-odata</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sap.cds</groupId>
            <artifactId>cds-starter-cloudfoundry</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sap.cds</groupId>
            <artifactId>cds-integration-cloud-sdk</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sap.cds</groupId>
            <artifactId>cds-feature-remote-odata</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.sap.cds</groupId>
            <artifactId>cds-feature-auditlog-v2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
		<dependency>
		    <groupId>org.jsoup</groupId>
		    <artifactId>jsoup</artifactId>
		    <version>1.14.3</version>
		</dependency>
        <!-- jclouds dependencies -->
        <dependency>
            <groupId>org.apache.jclouds.provider</groupId>
            <artifactId>aws-s3</artifactId>
            <version>${jclouds.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.apache.jclouds.provider</groupId>
            <artifactId>azureblob</artifactId>
            <version>${jclouds.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>31.0.1-jre</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.4</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.9</version>
        </dependency>
        <dependency>
            <groupId>com.sap.cloud.sdk.datamodel</groupId>
            <artifactId>odata-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Cloud SDK dependencies -->
        <dependency>
            <groupId>com.sap.cloud.sdk.cloudplatform</groupId>
            <artifactId>scp-cf</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sap.cloud.sdk.s4hana</groupId>
            <artifactId>s4hana-all</artifactId>
        </dependency>

        <!-- DB Depedencies -->
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
        </dependency>
        <!-- Testing Dependencies-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sap.cloud.sdk.testutil</groupId>
            <artifactId>testutil-core</artifactId>
            <scope>test</scope>
            <exclusions>
            	<exclusion>
            		<groupId>com.github.jknack</groupId>
            		<artifactId>handlebars</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>
        <!-- Testing Dependencies-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Swagger documentation annotations -->
        <!-- <dependency>
                    <groupId>io.springfox</groupId>
                    <artifactId>springfox-swagger2</artifactId>
                    <version>${io.springfox.version}</version>
                </dependency> -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Commenting EMS dependencies as causing issue with MT subscription-->
        <dependency>
            <groupId>com.sap.cds</groupId>
            <artifactId>cds-feature-enterprise-messaging</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.sap.cds</groupId>
            <artifactId>cds-feature-message-queuing</artifactId>
            <scope>runtime</scope>
            <exclusions>
            	<exclusion>
            		<groupId>io.netty</groupId>
            		<artifactId>netty-handler</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>
      	<dependency>
			<groupId>com.sap.cp.auditlog</groupId>
			<artifactId>audit-java-client-api</artifactId>
			<version>${auditlog.sap.version}</version>
		</dependency>
		
		 <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency> 

		<dependency>
			<groupId>com.sap.cp.auditlog</groupId>
			<artifactId>audit-java-client-impl</artifactId>
			<version>${auditlog.sap.version}</version>
		</dependency>

		<dependency>
			<groupId>com.sap.xs.java</groupId>
			<artifactId>xs-env</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.dataformat</groupId>
		    <artifactId>jackson-dataformat-xml</artifactId>
       </dependency>
        <dependency>
            <groupId>com.sap.cloud.sdk.datamodel</groupId>
            <artifactId>openapi-core</artifactId>
            <version>3.48.0</version>
        </dependency>

        <!-- CF Env Library -->
        <dependency>
            <groupId>io.pivotal.cfenv</groupId>
            <artifactId>java-cfenv-boot</artifactId>
            <version>${cf.env.version}</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>com.sap.hcp.cf.logging</groupId>
            <artifactId>cf-java-logging-support-logback</artifactId>
            <version>${cf-logging-version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- SAP Passport -->

        <dependency>
            <groupId>com.sap.core.jdsr</groupId>
            <artifactId>com.sap.js.passport.api</artifactId>
            <version>${sap-passport-version}</version>
        </dependency>

        <!-- Servlet Filter instrumentation -->
        <dependency>
            <groupId>com.sap.hcp.cf.logging</groupId>
            <artifactId>cf-java-logging-support-servlet</artifactId>
            <version>${cf-logging-version}</version>
        </dependency>
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>5.5.2</version>
        </dependency>

        <dependency>
			<groupId>com.github.vladimir-bukhtoyarov</groupId>
			<artifactId>bucket4j-core</artifactId>
			<version>${bucket4j-version}</version>
		</dependency>

        <!--Javers-->
        <dependency>
            <groupId>org.javers</groupId>
            <artifactId>javers-core</artifactId>
            <version>6.2.4</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.code.gson</groupId>
                    <artifactId>gson</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- PRECOMPILE PRECOMPILATION CLASSES -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <executions>
                    <execution>
                        <id>precompile-tools-compile</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>com/sap/ic/cmh/utils/MessageKeyPrecompiler.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- CONFIGURE ADDITIONAL SOURCE DIRECTORY FOR GENERATED CLASSES -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/gen/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- SPRING BOOT PLUGIN -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <configuration>
                    <skip>false</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- STEPS TO BUILD CDS MODEL AND GENERATE POJOs -->
            <plugin>
                <groupId>com.sap.cds</groupId>
                <artifactId>cds-maven-plugin</artifactId>
                <version>${cds.services.version}</version>
                <configuration>
                    <nodeVersion>${node.version}</nodeVersion>
                </configuration>
                <executions>
                    <execution>
                        <id>cds.clean</id>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>cds.install-node</id>
                        <goals>
                            <goal>install-node</goal>
                        </goals>
                        <configuration>
                            <skip>${cdsdk-global}</skip>
                            <downloadUrl>${node.url}</downloadUrl>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-cdsdk</id>
                        <goals>
                            <goal>install-cdsdk</goal>
                        </goals>
                        <configuration>
                            <skip>${cdsdk-global}</skip>
                            <version>${cdsdk.version}</version>
                        </configuration>
                    </execution>
                    <execution>
                        <id>cds.build</id>
                        <goals>
                            <goal>cds</goal>
                        </goals>
                        <configuration>
                            <commands>
                                <command>build</command>

                                <command>deploy --to sqlite --dry &gt;
                                                                                                                                                									"${project.basedir}/src/main/resources/schema.sql"</command>
                            </commands>
                        </configuration>
                    </execution>
                    <execution>
                        <id>cds.generate</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <basePackage>cds.gen</basePackage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- OData Generator Maven Plugin -->
            <plugin>
                <groupId>com.sap.cloud.sdk.datamodel</groupId>
                <artifactId>odata-generator-maven-plugin</artifactId>
                <version>3.17.2</version>
                <executions>
                    <execution>
                        <id>generate-consumption</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputDirectory>${project.basedir}/external</inputDirectory>
                            <outputDirectory>${project.basedir}/src/gen/java</outputDirectory>
                            <deleteOutputDirectory>true</deleteOutputDirectory>
                            <packageName>vdm</packageName>
                            <defaultBasePath>odata/v2/</defaultBasePath>
                            <serviceMethodsPerEntitySet>true</serviceMethodsPerEntitySet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.sap.cloud.sdk.datamodel</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <!-- Maintain Maven property sap-cloud-sdk.version in your POM with the latest SAP Cloud SDK version -->
                <version>3.48.0</version>
                <executions>
                    <execution>
                        <id>generate-consumption</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <inputSpec>${project.basedir}/external/PlatformAPI.yaml</inputSpec>
                    <outputDirectory>${project.basedir}/src/gen/java</outputDirectory>
                    <apiPackage>sample.api</apiPackage>
                    <modelPackage>sample.model</modelPackage>
                    <apiMaturity>released</apiMaturity>
                    <logLevel>info</logLevel>
                    <!-- (Optional) You can add a custom copyright header:
                    <copyrightHeader>Copyright (c) this year, my company</copyrightHeader>

                    Or use the SAP copyright header:
                    <sapCopyrightHeader>true</sapCopyrightHeader>
                    -->
                </configuration>
            </plugin>

            <!-- PRECOMPILE MESSAGE KEYS -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>generate-message-keys</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.sap.ic.cmh.utils.MessageKeyPrecompiler</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- <plugin>
                                        <artifactId>maven-war-plugin</artifactId>
                                        <version>2.6</version>
                                        <configuration>
                                            <failOnMissingWebXml>false</failOnMissingWebXml>
                                        </configuration>
                                    </plugin> -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19</version>
                <configuration>	
                    <!-- jacoco and proxy settings -->	
                    <argLine>-Xmx1024m ${surefireArgLine}</argLine>	
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>	
                </configuration>
            </plugin>
            <!-- measurement of code coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <configuration>
                    <excludes>
                        <exclude>cds/gen/**</exclude>
						<exclude>com/sap/ic/cmh/gen/**</exclude>
						<exclude>vdm/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules></rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!-- A profile that uses global installation of @sap/cds-dk -->
        <profile>
            <id>cdsdk-global</id>
            <properties>
                <cdsdk-global>true</cdsdk-global>
            </properties>
        </profile>
    </profiles>
</project>
