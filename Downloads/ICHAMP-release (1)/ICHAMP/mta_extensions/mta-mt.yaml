_schema-version: "3.1"
ID: cmh
version: 1.0.0
description: "cmh application"
parameters:
    enable-parallel-deployments: true
    global-xsappname: cmh-${space}
    approuter-host: cmh-${space}

modules:
    # --------------------- SERVER MODULE ------------------------
    - name: cmh-srv
      type: java
      path: srv
      parameters:
          memory: 1024M
          disk-quota: 512M
          buildpack: sap_java_buildpack
      properties:
          USE_JCO: true
          SPRING_PROFILES_ACTIVE: cloud
          CDS_MULTITENANCY_APPUI_TENANTSEPARATOR: "-"
          SAP_JWT_TRUST_ACL: '[{"clientid":"*","identityzone":"*"}]'
      build-parameters:
          builder: custom
          #   commands: [mvn clean package -DskipTests=true] # To skip test in local build
          commands: [mvn clean package] # Tests needed to run in ci/cd for coverage
          build-result: "target/*.[wj]ar"
      requires:
          - name: cmh-service-uaa
          - name: cmh-destinations
          - name: cmh-connectivity
          - name: cmh-service-manager
          - name: cmh-saas-registry
          - name: cmh-application-logs
          - name: cmh-portal
          # - name: cmh-messaging
          - name: mtx-sidecar
            properties:
                CDS_MULTITENANCY_SIDECAR_URL: ~{url}
          - name: app-url
            properties:
                CDS_MULTITENANCY_APPUI_URL: ~{url}
      provides:
          - name: cmh-srv-url
            properties:
                url: "${default-url}"

    # --------------------- SIDECAR MODULE -----------------------
    - name: cmh-sidecar
      type: nodejs
      path: mtx-sidecar
      build-parameters:
          ignore: ["node_modules/", "package-lock.json"]
      parameters:
          memory: 1024M
          disk-quota: 512M
      requires:
          - name: cmh-service-manager
          - name: cmh-service-uaa
          - name: cmh-application-logs
      provides:
          - name: mtx-sidecar
            properties:
                url: ${default-url}

    # --------------------- APPROUTER MODULE ---------------------
    - name: cmh-approuter
      type: nodejs
      path: approuter
      build-parameters:
          ignore: ["node_modules/", "package-lock.json"]
      parameters:
          memory: 512M
          disk-quota: 512M
          keep-existing-routes: true
          domain: ${default-domain}
          host: ${approuter-host}
          routes:
              - route: warranty-${default-uri}
              - route: bmw-${default-uri}
              - route: tatamotors-${default-uri}
      properties:
          TENANT_HOST_PATTERN: ^(.*)-${default-uri}
          SAP_JWT_TRUST_ACL: '[{"clientid":"*","identityzone":"*"}]'
          T_MODE: multitenant
      requires:
          - name: cmh-service-uaa
          - name: cmh-html5-repo-runtime
          - name: cmh-portal
          - name: cmh-saas-registry
          - name: cmh-destinations
          - name: cmh-application-logs
          - name: cmh-srv-url
            group: destinations
            properties:
                name: backend
                url: ~{url}
                forwardAuthToken: true
                strictSSL: true
      provides:
          - name: app-url
            properties:
                url: "${default-url}"

    # --------------------- LAUNCHPAD MODULE ---------------------
    - name: cmh-launchpad
      type: com.sap.portal.content
      path: launchpad
      parameters:
          config:
              TENANT_HOST_PATTERN: ^(.*)-${default-uri}
      deployed-after:
          - cmh-ui-deployer
      requires:
          - name: cmh-service-uaa
          - name: cmh-html5-repo-host
          - name: cmh-saas-registry
          - name: cmh-destinations
          - name: cmh-portal
            parameters:
                content-target: true
                service-key:
                    name: content-deploy-key
                    config:
                        content-endpoint: developer

    # --------------------- UI DEPLOYER MODULE ---------------------
    - name: cmh-ui-deployer
      type: com.sap.application.content
      path: deployer
      requires:
          - name: cmh-html5-repo-host
            parameters:
                content-target: true
      build-parameters:
          build-result: resources
          requires:
              - artifacts:
                    - dist/complaintui-content.zip
                name: complaint-ui
                target-path: resources/
              - artifacts:
                    - dist/claim-content.zip
                name: claim-ui
                target-path: resources/

    - name: complaint-ui
      type: html5
      path: app/complaintui
      build-parameters:
          builder: custom
          commands:
              - npm install
              - npm run build
          supported-platforms: []

    - name: claim-ui
      type: html5
      path: app/claim
      build-parameters:
          builder: custom
          commands:
              - npm install
              - npm run build
          supported-platforms: []

    # --------------------- RESOURCES ---------------------
resources:
    - name: cmh-service-uaa
      type: com.sap.xs.uaa
      parameters:
          service: xsuaa
          service-plan: broker
          path: ./config/xs-security-mt.json
          config: # override xsappname in cds-security.json, xsappname needs to be unique
              xsappname: ${global-xsappname}
    - name: cmh-html5-repo-runtime
      type: org.cloudfoundry.managed-service
      parameters:
          service-plan: app-runtime
          service: html5-apps-repo
    - name: cmh-html5-repo-host
      type: org.cloudfoundry.managed-service
      parameters:
          service: html5-apps-repo
          service-plan: app-host
          config:
              sizeLimit: 1
    - name: cmh-portal
      type: org.cloudfoundry.managed-service
      parameters:
          service-plan: standard
          service: portal
    - name: cmh-destinations
      type: org.cloudfoundry.managed-service
      requires:
          - name: cmh-srv-url
      parameters:
          service: destination
          service-plan: lite
    - name: cmh-connectivity
      type: org.cloudfoundry.managed-service
      parameters:
          service: connectivity
          service-plan: lite
    - name: cmh-service-manager
      type: org.cloudfoundry.managed-service
      parameters:
          service: service-manager
          service-plan: container
    - name: cmh-saas-registry
      type: org.cloudfoundry.managed-service
      parameters:
          service: saas-registry
          service-plan: application
          config:
              appName: ${global-xsappname} # this is the text on the tile
              xsappname: ${global-xsappname} # this is the value from xsuaa.parameters.config.xsappname
              appUrls:
                  getDependencies: ~{cmh-srv-url/url}/mt/v1.0/subscriptions/dependencies
                  onSubscription: ~{cmh-srv-url/url}/mt/v1.0/subscriptions/tenants/{tenantId}
              category: Industry Cloud Automotive
              description: Integrated Complaint Handling Solution for Industry Cloud
              displayName: ComplaintHandling-${space}
      requires:
          - name: cmh-srv-url
    - name: cmh-application-logs
      type: org.cloudfoundry.managed-service
      parameters:
          service: application-logs
          service-plan: lite
    # - name: cmh-messaging
    #   type: org.cloudfoundry.managed-service
    #   parameters:
    #     service: enterprise-messaging
    #     service-plan: default
    #     config:
    #       emname: cmh-ems-${space}
    #       instanceType: reuse
